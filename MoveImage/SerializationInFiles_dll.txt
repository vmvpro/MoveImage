using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Runtime.Serialization.Formatters.Binary;
using System.Runtime.Serialization.Formatters.Soap;
namespace ConsoleApplication1
{
    [Serializable]
    class Convert1
    {
        string int_dec;

        // [NonSerialized]
        // int k;

        public Convert1(string int_dec)
        {
            this.int_dec = int_dec; 
        }

        public void Show()
        {
           Console.WriteLine (this.int_dec);
        }

        public string Value()
        {
            string value = int_dec;
            return value;
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            BinaryFormatter bf_read, bf_write;

            Convert1 p = new Convert1(Convert.ToString(15));


            //--------------------------------------------------------------------
            // Создание и запись в файл dec2.txt 
            FileStream fs_write = new FileStream("dec2.txt", FileMode.Create, FileAccess.ReadWrite);
            bf_write = new BinaryFormatter();
            bf_write.Serialize(fs_write, p);
            fs_write.Close();
            bf_write = null;

            // Открытие и чтение из файла dec2.txt 
            FileStream fs_read = new FileStream("dec2.txt", FileMode.Open, FileAccess.ReadWrite);
            bf_read = new BinaryFormatter();
            Convert1 p_read = (Convert1)bf_read.Deserialize(fs_read);
            fs_read.Close();
            bf_read = null;
            
            // Отображение в консоли значение из файла
            Console.WriteLine(p_read.Value());

            // Функция конвертирования
            string binary_bin = Convert.ToString(Convert.ToInt32(p_read.Value()), 2);
            Console.WriteLine(binary_bin);
            string binary_oct = Convert.ToString(Convert.ToInt32(p_read.Value()), 8);
            Console.WriteLine(binary_oct);
            string binary_hex = Convert.ToString(Convert.ToInt32(p_read.Value()), 16);
            Console.WriteLine(binary_hex);
            
            //----------------------------------------------------------------------

            Convert1 p_2 = new Convert1(binary_bin);
            FileStream fs_bin = new FileStream("bin.txt", FileMode.Create, FileAccess.ReadWrite);
            bf_read = new BinaryFormatter();
            bf_read.Serialize(fs_bin, p_2);
            fs_bin.Close();

            Convert1 p_3 = new Convert1(binary_oct);
            FileStream fs_oct = new FileStream("oct.txt", FileMode.Create, FileAccess.ReadWrite);
            bf_read = new BinaryFormatter();
            bf_read.Serialize(fs_oct, p_2);
            fs_oct.Close();

            Convert1 p_4 = new Convert1(binary_hex);
            FileStream fs_hex = new FileStream("hex.txt", FileMode.Create, FileAccess.ReadWrite);
            bf_read = new BinaryFormatter();
            bf_read.Serialize(fs_hex, p_2);
            fs_hex.Close();


            //FileStream fs_hex_write = new FileStream("hex.txt", FileMode.Open, FileAccess.ReadWrite);
            //bf_write = new BinaryFormatter();
            //Convert1 p_hex_reader = (Convert1)bf_write.Deserialize(fs_hex_write);
            //fs_hex_write.Close();
            
           
            // Console.WriteLine(binary);
           
           //p1.Show();

            //Console.WriteLine(p_hex_reader.Value());

            //Console.WriteLine(Convert.ToInt16(p1.Value(), 2));
            
            //p1.Show();

            Console.ReadLine();
        }

        public void ConvertBin(string str)
        {
            Console.WriteLine(Convert.ToInt16(str, 2));
        }

    }
}
